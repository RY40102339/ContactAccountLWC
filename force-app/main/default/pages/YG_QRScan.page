<apex:page sidebar="false" showHeader="false">
    <!-- jQuery -->    
    <apex:includeScript value="{!URLFOR($Resource.YG_CustomerPortal, 'YG_JS/jquery.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.YG_CustomerPortal, 'YG_JS/jsQR.js')}"/>
    <style>
    #loadingMessage {
      text-align: center;
      padding: 40px;

    }

    #canvas {
      width: 100%;
      height: 100%;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }

    #output {
      margin-top: 20px;
      display:none;
      padding: 10px;
      padding-bottom: 0;
    }

    #output div {
      padding-bottom: 10px;
      word-wrap: break-word;
    }

    #noQRFound {
      text-align: center;
    }
    
    #close_button {
    border: none;
    display: inline-block;
    height: 20px;
    left: calc(100vw - 45px);
    position: relative;
    top: 20px;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
    width: 20px;
    z-index: 5;
}
#close_button::before {
    background: #fff;
    content: "";
    display: block;
    height: 2px;
    left: -5px;
    margin-top: -1px;
    position: absolute;
    top: 50%;
    width: 30px;
}

#close_button::after {
    background: #fff;
    content: "";
    display: block;
    height: 2px;
    left: -5px;
    margin-top: -1px;
    position: absolute;
    top: 50%;
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
    width: 30px;
}
    </style>
  <div id="loadingMessage">Loading....</div>
<span id="close_button" style="display:none"></span>
  <canvas id="canvas" hidden=""></canvas>
  <div id="output">
    <div id="outputMessage"></div>
  </div>
<script>
    var myReq;
    var video = document.createElement("video");
    var canvasElement = document.getElementById("canvas");
    var canvas = canvasElement.getContext("2d");
    var loadingMessage = document.getElementById("loadingMessage");
    var outputContainer = document.getElementById("output");
    var outputMessage = document.getElementById("outputMessage");
    var closeCanvas= document.getElementById("close_button");

    jQuery('#close_button').on('click', function() {
      cancelAnimationFrame(myReq);
      canvasElement.hidden = true;
       window.top.location.hash = '#close';
    });

    function drawLine(begin, end, color) {
      canvas.beginPath();
      canvas.moveTo(begin.x, begin.y);
      canvas.lineTo(end.x, end.y);
      canvas.lineWidth = 4;
      canvas.strokeStyle = color;
      canvas.stroke();
    }

    // Use facingMode: environment to attemt to get the front camera on phones
    navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment", frameRate: {ideal: 5, max: 10}  } }).then(function(stream) {
      video.srcObject = stream;
      video.setAttribute("playsinline", true); // required to tell iOS safari we dont want fullscreen
      video.setAttribute("autoplay", true); // required to iOS 14
      video.play();
      requestAnimationFrame(tick);
    });

    function tick() {
      loadingMessage.innerText = "âŒ› Loading video..."
      if (video.readyState === video.HAVE_ENOUGH_DATA) {
        loadingMessage.hidden = true;
        canvasElement.hidden = false;
        outputContainer.hidden = false;
        closeCanvas.style.display = 'block';

        canvasElement.height = video.videoHeight;
        canvasElement.width = video.videoWidth;
        canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
        var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
        var code = jsQR(imageData.data, imageData.width, imageData.height, {
          inversionAttempts: "dontInvert",
        });
        if (code) {
          drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
          drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
          drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
          drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
          var qrcode = code.data;
          var index = qrcode.lastIndexOf('/N:');
          qrcode = qrcode.slice(index + 3);
          setTimeout(function() {
              window.cancelAnimationFrame(myReq)
              canvasElement.hidden = true;
              window.top.location.hash = '#'+ qrcode;          
          }, 1000);
        } else {
          outputMessage.hidden = false;
        }
      }else{
          loadingMessage.innerText = "ðŸŽ¥ Unable to access video stream (please make sure you have a webcam enabled)";
      }

      myReq = requestAnimationFrame(tick);
    }
  </script>
  </apex:page>